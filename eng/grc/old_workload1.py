#!/usr/bin/env python3
# -*- coding: utf-8 -*-

#
# SPDX-License-Identifier: GPL-3.0
#
# GNU Radio Python Flow Graph
# Title: Not titled yet
# Author: bquantump
# GNU Radio version: 3.9.1.0

from gnuradio import blocks
from gnuradio import filter
from gnuradio.filter import firdes
from gnuradio import gr
from gnuradio.fft import window
import sys
import signal
from argparse import ArgumentParser
from gnuradio.eng_arg import eng_float, intx
from gnuradio import eng_notation
from gnuradio import network
import numpy as np




class workload1(gr.top_block):

    def __init__(self):
        gr.top_block.__init__(self, "Not titled yet", catch_exceptions=True)

        ##################################################
        # Variables
        ##################################################
        self.zc_25 = zc_25 = [ 0.05518077-0.02828953j,  0.01763566+0.00273673j,
               -0.04090604+0.04507728j, -0.05031251+0.01472966j,
               -0.00945377-0.05823889j,  0.03786083-0.06934602j,
                0.06100481-0.00010616j,  0.05139064+0.06239376j,
                0.01471851+0.06398365j, -0.02346448+0.04486427j,
               -0.03737242+0.04769511j, -0.03643217+0.05345895j,
               -0.04697565+0.03963548j, -0.06082027+0.02847912j,
               -0.04857368+0.04088509j, -0.01870643+0.05885456j,
               -0.00425179+0.06282782j,  0.00479351+0.05648554j,
                0.04251402+0.03613764j,  0.07956264-0.00965879j,
                0.04518538-0.054305j  , -0.0437225 -0.04791309j,
               -0.0746706 +0.00336197j, -0.00469503+0.0347385j ,
                0.06205126+0.01841491j,  0.0283218 -0.00411454j,
               -0.04843742-0.00491965j, -0.0494011 -0.01002049j,
                0.02565589-0.02762383j,  0.07002211-0.0148611j ,
                0.03064448+0.03938221j, -0.03632181+0.07047975j,
               -0.06457429+0.03070548j, -0.05350413-0.03499058j,
               -0.03367553-0.06059322j, -0.01598244-0.05209942j,
                0.00264267-0.05311211j,  0.0176898 -0.06587923j,
                0.02150692-0.06549698j,  0.01464513-0.05593188j,
                0.00282174-0.05718811j, -0.01225568-0.06271469j,
               -0.03433646-0.05190272j, -0.05994239-0.02217869j,
               -0.06507004+0.01766788j, -0.02575435+0.05496887j,
                0.03530184+0.05885297j,  0.05490842+0.00723064j,
                0.01250344-0.05470662j, -0.02990337-0.04698899j,
               -0.01706164+0.02587658j,  0.01294216+0.06061479j,
               -0.00035568+0.00313516j, -0.02558182-0.06403744j,
                0.00623345-0.0432367j ,  0.06165613+0.03637041j,
                0.04020412+0.07340745j, -0.05236413+0.03973157j,
               -0.09639136-0.00915061j, -0.04647764-0.03498216j,
                0.00452885-0.04936369j, -0.00755161-0.06214549j,
               -0.02045069-0.06458229j,  0.01909718-0.05918412j,
                0.04955583-0.05847013j,  0.01320416-0.06077099j,
               -0.03265711-0.05935163j, -0.02526632-0.05727741j,
               -0.01470655-0.04733922j, -0.0574801 -0.0089421j ,
               -0.08523029+0.04594371j, -0.01527258+0.06393237j,
                0.08033552+0.0234783j ,  0.06722894-0.02458769j,
               -0.03248688-0.02920395j, -0.06853517-0.00762589j,
                0.0027604 +0.00152838j,  0.06176165+0.00521067j,
                0.02205081+0.02178207j, -0.04969377+0.02515365j,
               -0.05470662-0.01250344j,  0.00181386-0.05535275j,
                0.05083508-0.04610517j,  0.06007802+0.00868875j,
                0.04122422+0.05335567j,  0.00869679+0.06331943j,
               -0.02407922+0.05738533j, -0.04070418+0.04925955j,
               -0.04243337+0.03844283j, -0.04680364+0.03394516j,
               -0.05427052+0.04251014j, -0.04665626+0.04976138j,
               -0.02276664+0.04805789j,  0.00017058+0.0544955j ,
                0.02120732+0.06599871j,  0.04981682+0.04006641j,
                0.06457429-0.03070548j,  0.02923869-0.07370053j,
               -0.03773874-0.03264705j, -0.06269303+0.03454753j,
               -0.01313177+0.03533917j,  0.04829151-0.01445024j,
                0.04300746-0.02281985j, -0.01928281+0.02114774j,
               -0.05689817+0.03085556j, -0.02387473-0.02566717j,
                0.03868938-0.06395414j,  0.06286621-0.01597373j,
                0.03287959+0.06252747j, -0.01385293+0.0789405j ,
               -0.04373734+0.03464703j, -0.0566834 -0.00076612j,
               -0.06282782-0.00425179j, -0.06040471-0.0128476j ,
               -0.04957575-0.03966406j, -0.04490801-0.04993432j,
               -0.05459521-0.028232j  , -0.06432059-0.00692993j,
               -0.06042004-0.00457604j, -0.04956626+0.0103233j ,
               -0.03483571+0.05565083j,  0.00014332+0.0808329j ,
                0.05078262+0.03380419j,  0.06607976-0.04331026j,
                0.01355291-0.05742352j, -0.05242186-0.00050954j,
               -0.04891418+0.03623076j,  0.01728249+0.00445215j]
        self.samp_rate = samp_rate = 32000/8
        self.lpf_taps = lpf_taps = [-7.975280459504575e-05, -4.9262958782492206e-05, -1.6447560483356938e-05, 1.775114651536569e-05, 5.2323939598863944e-05, 8.620815060567111e-05, 0.0001183042477350682, 0.00014749598631169647, 0.00017267520888708532, 0.00019277109822724015, 0.00020678412693087012, 0.00021382409613579512, 0.00021315101184882224, 0.00020421782392077148, 0.00018671243742574006, 0.00016059722111094743, 0.0001261434081243351, 8.395734039368108e-05, 3.499631566228345e-05, -1.9428558516665362e-05, -7.766461203573272e-05, -0.00013774647959508002, -0.0001974424085346982, -0.0002543180307839066, -0.00030581667670048773, -0.00034935466828756034, -0.00038242785376496613, -0.00040272719343192875, -0.00040825686301104724, -0.000397451629396528, -0.0003692862228490412, -0.00032337172888219357, -0.0002600329462438822, -0.00018036100664176047, -8.623716712463647e-05, 1.967684511328116e-05, 0.00013398408191278577, 0.0002526341995690018, 0.0003710418241098523, 0.00048423861153423786, 0.0005870554596185684, 0.0006743291160091758, 0.0007411251426674426, 0.000782970164436847, 0.0007960811490193009, 0.000777584791649133, 0.0007257125107571483, 0.000639963720459491, 0.0005212261457927525, 0.00037184517714194953, 0.00019563482783269137, -2.1731548258685507e-06, -0.0002150458312826231, -0.0004353296826593578, -0.0006544924690388143, -0.0008634199621155858, -0.0010527590056881309, -0.0012132939882576466, -0.0013363448670133948, -0.0014141680439934134, -0.001440347288735211, -0.0014101533452048898, -0.0013208562741056085, -0.0011719767935574055, -0.0009654563618823886, -0.0007057401817291975, -0.0003997587482444942, -5.680566391674802e-05, 0.000311691255774349, 0.0006925018969923258, 0.0010710213100537658, 0.0014317813329398632, 0.0017590289935469627, 0.0020373535808175802, 0.002252337522804737, 0.00239120633341372, 0.0024434514343738556, 0.002401400124654174, 0.0022606998682022095, 0.002020700369030237, 0.0016847088700160384, 0.001260098535567522, 0.0007582596153952181, 0.00019438723393250257, -0.00041289726505056024, -0.001042083720676601, -0.0016694576479494572, -0.002269912511110306, -0.0028178647626191378, -0.0032882390078157187, -0.0036574925761669874, -0.003904638346284628, -0.0040122224017977715, -0.003967225085943937, -0.0037618353962898254, -0.003394069615751505, -0.0028681978583335876, -0.002194953616708517, -0.0013915060553699732, -0.00048118302947841585, 0.0005070575280115008, 0.0015393999638035893, 0.0025781728327274323, 0.003583052661269903, 0.004512437153607607, 0.005324941594153643, 0.005980979185551405, 0.006444355472922325, 0.006683837156742811, 0.00667462358251214, 0.006399671547114849, 0.005850816145539284, 0.005029634106904268, 0.003948013298213482, 0.0026283967308700085, 0.0011036653304472566, -0.0005833368049934506, -0.002380644902586937, -0.004228364676237106, -0.006060187239199877, -0.007805192843079567, -0.009389887563884258, -0.010740415193140507, -0.011784891597926617, -0.012455755844712257, -0.012692097574472427, -0.012441863305866718, -0.011663862504065037, -0.01032952219247818, -0.008424297906458378, -0.005948714446276426, -0.002918964484706521, 0.0006329383468255401, 0.00465948972851038, 0.009098498150706291, 0.0138743557035923, 0.01889972947537899, 0.024077655747532845, 0.02930395118892193, 0.03446989879012108, 0.03946511074900627, 0.04418047145009041, 0.048511143773794174, 0.052359405905008316, 0.0556374192237854, 0.05826963856816292, 0.06019497662782669, 0.06136851757764816, 0.06176277622580528, 0.06136851757764816, 0.06019497662782669, 0.05826963856816292, 0.0556374192237854, 0.052359405905008316, 0.048511143773794174, 0.04418047145009041, 0.03946511074900627, 0.03446989879012108, 0.02930395118892193, 0.024077655747532845, 0.01889972947537899, 0.0138743557035923, 0.009098498150706291, 0.00465948972851038, 0.0006329383468255401, -0.002918964484706521, -0.005948714446276426, -0.008424297906458378, -0.01032952219247818, -0.011663862504065037, -0.012441863305866718, -0.012692097574472427, -0.012455755844712257, -0.011784891597926617, -0.010740415193140507, -0.009389887563884258, -0.007805192843079567, -0.006060187239199877, -0.004228364676237106, -0.002380644902586937, -0.0005833368049934506, 0.0011036653304472566, 0.0026283967308700085, 0.003948013298213482, 0.005029634106904268, 0.005850816145539284, 0.006399671547114849, 0.00667462358251214, 0.006683837156742811, 0.006444355472922325, 0.005980979185551405, 0.005324941594153643, 0.004512437153607607, 0.003583052661269903, 0.0025781728327274323, 0.0015393999638035893, 0.0005070575280115008, -0.00048118302947841585, -0.0013915060553699732, -0.002194953616708517, -0.0028681978583335876, -0.003394069615751505, -0.0037618353962898254, -0.003967225085943937, -0.0040122224017977715, -0.003904638346284628, -0.0036574925761669874, -0.0032882390078157187, -0.0028178647626191378, -0.002269912511110306, -0.0016694576479494572, -0.001042083720676601, -0.00041289726505056024, 0.00019438723393250257, 0.0007582596153952181, 0.001260098535567522, 0.0016847088700160384, 0.002020700369030237, 0.0022606998682022095, 0.002401400124654174, 0.0024434514343738556, 0.00239120633341372, 0.002252337522804737, 0.0020373535808175802, 0.0017590289935469627, 0.0014317813329398632, 0.0010710213100537658, 0.0006925018969923258, 0.000311691255774349, -5.680566391674802e-05, -0.0003997587482444942, -0.0007057401817291975, -0.0009654563618823886, -0.0011719767935574055, -0.0013208562741056085, -0.0014101533452048898, -0.001440347288735211, -0.0014141680439934134, -0.0013363448670133948, -0.0012132939882576466, -0.0010527590056881309, -0.0008634199621155858, -0.0006544924690388143, -0.0004353296826593578, -0.0002150458312826231, -2.1731548258685507e-06, 0.00019563482783269137, 0.00037184517714194953, 0.0005212261457927525, 0.000639963720459491, 0.0007257125107571483, 0.000777584791649133, 0.0007960811490193009, 0.000782970164436847, 0.0007411251426674426, 0.0006743291160091758, 0.0005870554596185684, 0.00048423861153423786, 0.0003710418241098523, 0.0002526341995690018, 0.00013398408191278577, 1.967684511328116e-05, -8.623716712463647e-05, -0.00018036100664176047, -0.0002600329462438822, -0.00032337172888219357, -0.0003692862228490412, -0.000397451629396528, -0.00040825686301104724, -0.00040272719343192875, -0.00038242785376496613, -0.00034935466828756034, -0.00030581667670048773, -0.0002543180307839066, -0.0001974424085346982, -0.00013774647959508002, -7.766461203573272e-05, -1.9428558516665362e-05, 3.499631566228345e-05, 8.395734039368108e-05, 0.0001261434081243351, 0.00016059722111094743, 0.00018671243742574006, 0.00020421782392077148, 0.00021315101184882224, 0.00021382409613579512, 0.00020678412693087012, 0.00019277109822724015, 0.00017267520888708532, 0.00014749598631169647, 0.0001183042477350682, 8.620815060567111e-05, 5.2323939598863944e-05, 1.775114651536569e-05, -1.6447560483356938e-05, -4.9262958782492206e-05, -7.975280459504575e-05]
        self.forwarding_port = forwarding_port = 60002
        self.forwarding_ip = forwarding_ip = '10.0.0.7'

    def make_blocks_and_connections(self):
        ##################################################
        # Blocks
        ##################################################
        self.network_udp_sink_0 = network.udp_sink(gr.sizeof_gr_complex, 1, self.forwarding_ip, self.forwarding_port, 0, 1472, False)
        self.fft_filter_xxx_0 = filter.fft_filter_ccc(1, np.conjugate(self.zc_25)[::-1], 1)
        self.fft_filter_xxx_0.declare_sample_delay(0)
        self.blocks_vector_source_x_0 = blocks.vector_source_c(self.zc_25 + [0] * 1000, True, 1, [])
        self.blocks_throttle_0 = blocks.throttle(gr.sizeof_gr_complex*1, self.samp_rate,True)



        ##################################################
        # Connections
        ##################################################
        self.connect((self.blocks_throttle_0, 0), (self.fft_filter_xxx_0, 0))
        self.connect((self.blocks_vector_source_x_0, 0), (self.blocks_throttle_0, 0))
        self.connect((self.fft_filter_xxx_0, 0), (self.network_udp_sink_0, 0))


    def get_zc_25(self):
        return self.zc_25

    def set_zc_25(self, zc_25):
        self.zc_25 = zc_25
        self.blocks_vector_source_x_0.set_data(self.zc_25 + [0] * 1000, [])
        self.fft_filter_xxx_0.set_taps(np.conjugate(self.zc_25)[::-1])

    def get_samp_rate(self):
        return self.samp_rate

    def set_samp_rate(self, samp_rate):
        self.samp_rate = samp_rate
        self.blocks_throttle_0.set_sample_rate(self.samp_rate)

    def get_lpf_taps(self):
        return self.lpf_taps

    def set_lpf_taps(self, lpf_taps):
        self.lpf_taps = lpf_taps

    def get_forwarding_port(self):
        return self.forwarding_port

    def set_forwarding_port(self, forwarding_port):
        self.forwarding_port = forwarding_port

    def get_forwarding_ip(self):
        return self.forwarding_ip

    def set_forwarding_ip(self, forwarding_ip):
        self.forwarding_ip = forwarding_ip




def main(tb, options=None):
    tb.make_blocks_and_connections()
    def sig_handler(sig=None, frame=None):
        tb.stop()
        tb.wait()

        sys.exit(0)

    signal.signal(signal.SIGINT, sig_handler)
    signal.signal(signal.SIGTERM, sig_handler)

    tb.start()

    try:
        #tb.wait()
        input('Press Enter to quit: ')
    except EOFError:
        pass
    tb.stop()
    tb.wait()